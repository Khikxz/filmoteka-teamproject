{"mappings":"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","sources":["src/js/script.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'api_key=b5e824a3d922f68ba211fcf6dbdcb6f5';\nconst API_URL = BASE_URL + '/discover/movie?sort_by-popularity.desc&' + API_KEY;\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst searchURL = BASE_URL + '/search/movie?' + API_KEY;\nconst getGenres = BASE_URL + '/genre/movie/list?' + API_KEY;\n\nconst options = {\n  params: {\n    key: API_KEY,\n    query: '',\n    include_adult: false,\n    language: 'en-US',\n    primary_release_year: '',\n    page: 1,\n    region: '',\n    year: '',\n  },\n};\n//get Genres\nlet genres;\n\nfetch(getGenres)\n  .then(response => response.json())\n  .then(data => {\n    genres = data.genres;\n    console.log(genres);\n  })\n  .catch(error => {\n    console.error('Error fetching genres:', error);\n  });\n//localStorage\nlet currentMovieTitle, currentMovieID, queue, watched;\nJSON.parse(localStorage.getItem('movie-queue')) === null\n  ? (queue = [])\n  : (queue = JSON.parse(localStorage.getItem('movie-queue')));\nlocalStorage.setItem('movie-queue', JSON.stringify(queue));\n\nJSON.parse(localStorage.getItem('movie-watched')) === null\n  ? (watched = [])\n  : (watched = JSON.parse(localStorage.getItem('movie-watched')));\nlocalStorage.setItem('movie-watched', JSON.stringify(watched));\n\n// MODAL SECTION\nconst modal = document.getElementById('myModal');\nconst modalPoster = document.getElementById('modal-poster');\nconst modalTitle = document.getElementById('modal-title');\nconst modalVote = document.getElementById('modal-vote');\nconst modalPopularity = document.getElementById('modal-popularity');\nconst modalOrigTitle = document.getElementById('modal-original-title');\nconst modalGenre = document.getElementById('modal-genre');\nconst modalOverview = document.getElementById('modal-overview');\nconst addToWatchedBtn = document.getElementById('addToWatchedBtn');\nconst addToQueuBtn = document.getElementById('addToQueuBtn');\nconst closeBtn = document.getElementsByClassName('close')[0];\n\n// function to open the modal with movie details\nfunction openModal(movie) {\n  modalPoster.src = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n  modalTitle.textContent = movie.title.toUpperCase();\n  modalVote.textContent =\n    movie.vote_average.toFixed(1) + '   /   ' + movie.vote_count;\n  modalPopularity.textContent = movie.popularity.toFixed(1);\n  modalOrigTitle.textContent = movie.original_title.toUpperCase();\n  modalGenre.textContent = movie.genre;\n  modalOverview.textContent = movie.overview;\n  modal.style.display = 'block';\n\n  modalPoster.src = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n  modalTitle.textContent = movie.title;\n  modalVote.textContent = movie.vote_average + '/' + movie.vote_count;\n  modalPopularity.textContent = movie.popularity;\n  modalOrigTitle.textContent = movie.original_title;\n  modalGenre.textContent = movie.genre_ids;\n  modalOverview.textContent = movie.overview;\n  modal.style.display = 'block';\n  currentMovieID = movie.id;\n  currentMovieTitle = movie.original_title;\n}\n\n// function to close the modal\nfunction closeModal() {\n  modal.style.display = 'none';\n}\n\n// event listener for the close button\ncloseBtn.addEventListener('click', closeModal);\n\n// event listener for clicks outside the modal\nwindow.addEventListener('click', function (event) {\n  if (event.target === modal) {\n    closeModal();\n\n  const API_KEY = 'api_key=b5e824a3d922f68ba211fcf6dbdcb6f5';\n  const API_URL = BASE_URL + '/discover/movie?sort_by-popularity.desc&' + API_KEY;\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n  const searchURL = BASE_URL + '/search/movie?' + API_KEY;\n  const getGenres = BASE_URL + '/genre/movie/list?' + API_KEY;\n  //localStorage\n  let currentMovieTitle, currentMovieID, queue, watched;\n  JSON.parse(localStorage.getItem(\"movie-queue\")) === null ? queue = [] : queue = JSON.parse(localStorage.getItem(\"movie-queue\"));\n  localStorage.setItem(\"movie-queue\", JSON.stringify(queue));\n  JSON.parse(localStorage.getItem(\"movie-watched\")) === null ? watched = [] : watched = JSON.parse(localStorage.getItem(\"movie-watched\"));\n  localStorage.setItem(\"movie-watched\", JSON.stringify(watched));\n  // MODAL SECTION\n  const modal = document.getElementById('myModal');\n  const modalPoster = document.getElementById('modal-poster');\n  const modalTitle = document.getElementById('modal-title');\n  const modalVote = document.getElementById('modal-vote');\n  const modalPopularity = document.getElementById('modal-popularity');\n  const modalOrigTitle = document.getElementById('modal-original-title');\n  const modalGenre = document.getElementById('modal-genre');\n  const modalOverview = document.getElementById('modal-overview');\n  const addToWatchedBtn = document.getElementById('addToWatchedBtn');\n  const addToQueuBtn = document.getElementById('addToQueuBtn');\nconst closeBtn = document.getElementsByClassName('close')[0];\nlet genres;\nfetch(getGenres)\n    .then(response => response.json())\n    .then(data => {\n        genres = data.genres;\n      getMovies(API_URL, genres); // Call getMovies with genres\n      showMovies(data, genres)\n    })\n    .catch(error => {\n        // console.error('Error fetching genres:', error);\n    });\n  // function to open the modal with movie details\n  function openModal(movie) {\n    modalPoster.src = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n    modalTitle.textContent = movie.title.toUpperCase();\n    modalVote.textContent =\n      movie.vote_average.toFixed(1) + '   /   ' + movie.vote_count;\n    modalPopularity.textContent = movie.popularity.toFixed(1);\n    modalOrigTitle.textContent = movie.original_title.toUpperCase();\n    // modalGenre.textContent = movie.genre;\n    const movieGenres = movie.genre_ids.map(genreId => {\n        const genre = genres.find(genre => genre.id === genreId);\n        return genre ? genre.name : '';\n    }).join(', ');\n    modalGenre.textContent = movieGenres;\n    modalOverview.textContent = movie.overview;\n    modal.style.display = 'block';\n\n  }\n  // function to close the modal\n  function closeModal() {\n    modal.style.display = 'none';\n  }\n  // event listener for the close button\n  closeBtn.addEventListener('click', closeModal);\n  // event listener for clicks outside the modal\n  window.addEventListener('click', function (event) {\n    if (event.target === modal) {\n      closeModal();\n    }\n  });\n  const main = document.getElementById('main');\n  const form = document.getElementById('search-form');\n  const search = document.getElementById('search-input');\n  const galleryEl = document.getElementById('gallery');\n  const loader = document.querySelector('.loader-container');\n  // PAGINATION\n  let lastUrl;\n  getMovies(API_URL);\n  // DISPLAY MOVIE CARDS\n  function getMovies(url) {\n    lastUrl = url;\n    main.classList.toggle('is-hidden');\n    loader.classList.toggle('is-hidden');\n    fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data.results);\n        if (data.results.length !== 0) {\n          showMovies(data.results);\n          // currentPage = data.page;\n          // nextPage = currentPage + 1;\n          // prevPage = currentPage - 1;\n          // totalPages = data.total_pages;\n          // main.classList.toggle('is-hidden');\n          // loader.classList.toggle('is-hidden');\n          // current.innerText = currentPage;\n        //   if (currentPage <= 1) {\n        //     prev.classList.add('disabled');\n        //     next.classList.remove('disabled');\n        //   } else if (currentPage >= totalPages) {\n        //     prev.classList.remove('disabled');\n        //     next.classList.add('disabled');\n        //   } else {\n        //     prev.classList.remove('disabled');\n        //     next.classList.remove('disabled');\n        //   }\n        // } else {\n        //   main.classList.toggle('is-hidden');\n        //   loader.classList.toggle('is-hidden');\n        //   main.innerHTML = `<h1 class=\"no-results\">No Results Found</h1>`;\n        }\n      });\n  }\nfunction showMovies(data) {\n    main.innerHTML = '';\n    data.forEach(movie => {\n      const { title, poster_path, release_date, genre_ids } = movie;\n      const movieEl = document.createElement('div');\n      movieEl.classList.add('movie');\n      const movieGenres = genre_ids && Array.isArray(genres)\n            ? genre_ids.map(genreId => {\n                const genre = genres.find(genre => genre.id === genreId);\n                return genre ? genre.name : '';\n            }).join(', ')\n        : '';\n      movieEl.innerHTML = `\n            <img src=\"${poster_path\n          ? IMG_URL + poster_path\n          : 'http:/>/via.placeholder.com/1080x1500'\n        }\"\n                alt=\"${title}\"/>\n            <div class=\"movie-info\">\n                <h3>${title.toUpperCase()}</h3>\n                <div class=\"movie-details\">\n                <span id=\"genre\">${movieGenres}</span> |\n                <span id=\"release_date\" class=\"${release_date}\">${release_date.slice(\n                  0,\n                  4\n                  )}</span>\n                  </div>\n                  </div>\n                  `;\n                  movieEl.addEventListener('click', function () {\n                    openModal(movie);\n                  });\n      main.appendChild(movieEl);\n    });\n  }}\n});\n\n\n// function for the next page\nnext.addEventListener('click', () => {\n  if (nextPage <= totalPages) {\n    pageCall(nextPage);\n  }\n});\n\nfunction pageCall(page) {\n  let urlSplit = lastUrl.split('?');\n  let queryParams = urlSplit[1].split('&');\n  let key = queryParams[queryParams.length - 1].split('=');\n  if (key[0] != 'page') {\n    let url = lastUrl + '&page=' + page;\n    getMovies(url);\n  } else {\n    key[1] = page.toString();\n    let a = key.join('=');\n    queryParams[queryParams.length - 1] = a;\n    let b = queryParams.join('&');\n    let url = urlSplit[0] + '?' + b;\n    getMovies(url);\n  }\n}\n\n//Clicking a movie\nmain.addEventListener('click', e => {\n  let currentMovie = e.target.parentElement;\n  currentMovieTitle = currentMovie.lastElementChild.firstElementChild.innerText;\n  console.log(currentMovieTitle);\n});\n\n//Add to Watched (localStorage)\naddToWatchedBtn.addEventListener('click', () => {\n  watched.includes(currentMovieTitle)\n    ? alert(`${currentMovieTitle} has been watched already`)\n    : watched.push(currentMovieTitle);\n  localStorage.setItem('movie-watched', JSON.stringify(watched));\n});\n\n//Add to Queue (localStorage)\naddToQueuBtn.addEventListener('click', () => {\n  queue.includes(currentMovieTitle)\n    ? alert(`${currentMovieTitle} has been added to the queue already`)\n    : queue.push(currentMovieTitle);\n  localStorage.setItem('movie-queue', JSON.stringify(queue));\n});\n\n//Add to Watched (localStorage)\naddToWatchedBtn.addEventListener('click', () => {\n  watched.includes(currentMovieID)\n    ? alert(`${currentMovieTitle} has been watched already`)\n    : watched.push(currentMovieID);\n  localStorage.setItem('movie-watched', JSON.stringify(watched));\n});\n\n//Add to Queue (localStorage)\naddToQueuBtn.addEventListener('click', () => {\n  queue.includes(currentMovieID)\n    ? alert(`${currentMovieTitle} has been added to the queue already`)\n    : queue.push(currentMovieID);\n  localStorage.setItem('movie-queue', JSON.stringify(queue));\n});\n\n//Pressing escape to close modal\ndocument.body.addEventListener('keydown', event => {\n  if (event.code === 'Escape') {\n    closeModal();\n  }\n  form.addEventListener('submit', e => {\n    e.preventDefault();\n    const searchTerm = search.value;\n    if (searchTerm) {\n      getMovies(searchURL + '&query=' + searchTerm);\n    } else {\n      getMovies(API_URL);\n    }\n  });\n  // function for previous page\n  prev.addEventListener('click', () => {\n    if (prevPage > 0) {\n      pageCall(prevPage);\n    }\n  });\n  // function for the next page\n  next.addEventListener('click', () => {\n    if (nextPage <= totalPages) {\n      pageCall(nextPage);\n    }\n  });\n function pageCall(page) {\n    let urlSplit = lastUrl.split('?');\n    let queryParams = urlSplit[1].split('&');\n    let key = queryParams[queryParams.length - 1].split('=');\n    if (key[0] != 'page') {\n      let url = lastUrl + '&page=' + page;\n      getMovies(url);\n    } else {\n      key[1] = page.toString();\n      let a = key.join('=');\n      queryParams[queryParams.length - 1] = a;\n      let b = queryParams.join('&');\n      let url = urlSplit[0] + '?' + b;\n      getMovies(url);\n    }\n\n  }\n  //Clicking a movie\n  main.addEventListener('click', e => {\n    let currentMovie = e.target.parentElement;\n    currentMovieTitle = currentMovie.lastElementChild.firstElementChild.innerText;\n    console.log(currentMovieTitle);\n  });\n  //Add to Watched (localStorage)\n  addToWatchedBtn.addEventListener('click', () => {\n    watched.includes(currentMovieTitle)\n      ? alert(`${currentMovieTitle} has been watched already`)\n      : watched.push(currentMovieTitle);\n    localStorage.setItem('movie-watched', JSON.stringify(watched));\n  });\n  //Add to Queue (localStorage)\n  addToQueuBtn.addEventListener('click', () => {\n    queue.includes(currentMovieTitle)\n      ? alert(`${currentMovieTitle} has been added to the queue already`)\n      : queue.push(currentMovieTitle);\n    localStorage.setItem('movie-queue', JSON.stringify(queue));\n  });\n  //Add to Watched (localStorage)\n  addToWatchedBtn.addEventListener('click', () => {\n    watched.includes(currentMovieID) ?\n      alert(`${currentMovieTitle} has been watched already`) :\n      watched.push(currentMovieID);\n    localStorage.setItem('movie-watched', JSON.stringify(watched));\n  })\n  //Add to Queue (localStorage)\n  addToQueuBtn.addEventListener('click', () => {\n    queue.includes(currentMovieID) ?\n      alert(`${currentMovieTitle} has been added to the queue already`) :\n      queue.push(currentMovieID);\n    localStorage.setItem('movie-queue', JSON.stringify(queue));\n  })\n  //Pressing escape to close modal\n  document.body.addEventListener('keydown', event => {\n    if (event.code === 'Escape') {\n      closeModal();\n    }\n  })\n  });"],"names":["$66b821ea461d9f2a$var$genres","$66b821ea461d9f2a$var$currentMovieTitle","$66b821ea461d9f2a$var$currentMovieID","$66b821ea461d9f2a$var$queue","$66b821ea461d9f2a$var$watched","fetch","$66b821ea461d9f2a$var$BASE_URL","then","response","json","data","genres","console","log","catch","error","JSON","parse","localStorage","getItem","setItem","stringify","$66b821ea461d9f2a$var$modal","document","getElementById","$66b821ea461d9f2a$var$addToWatchedBtn","$66b821ea461d9f2a$var$addToQueuBtn","$66b821ea461d9f2a$var$closeModal","style","display","getElementsByClassName","addEventListener","window","event1","target","closeModal1","queue1","watched1","API_KEY1","API_URL1","genres1","modal1","modalPoster1","modalTitle1","modalVote1","modalPopularity1","modalOrigTitle1","modalGenre1","modalOverview1","closeBtn1","getMovies","showMovies","event","_$main","loader","querySelector","url","classList","toggle","res","results","length","innerHTML","forEach","movie","title","poster_path","release_date","genre_ids","movieEl","createElement","add","movieGenres","Array","isArray","map","genreId","genre2","find","genre","id","name","join","concat","toUpperCase","slice","src","textContent","vote_average","toFixed","vote_count","popularity","original_title","genre1","overview","openModal1","appendChild","next","nextPage","totalPages","page","urlSplit","lastUrl","split","queryParams","key","toString","a","b","url1","$66b821ea461d9f2a$var$pageCall","main","e","currentMovie","parentElement","lastElementChild","firstElementChild","innerText","includes","alert","push","body","event2","pageCall1","url2","code","form","preventDefault","searchTerm","search","value","$66b821ea461d9f2a$var$searchURL","prev","prevPage"],"version":3,"file":"index.2ab9ee56.js.map"}