{"mappings":"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","sources":["src/js/script.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=b5e824a3d922f68ba211fcf6dbdcb6f5';\nconst API_URL = BASE_URL + '/discover/movie?sort_by-popularity.desc&' + API_KEY;\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst searchURL = BASE_URL + '/search/movie?' + API_KEY;\nconst getGenres = BASE_URL + '/genre/movie/list?' + API_KEY;\n\n\n//localStorage\nlet currentMovieTitle, currentMovieID, queue, watched;\nJSON.parse(localStorage.getItem(\"movie-queue\")) === null? queue = [] : queue = JSON.parse(localStorage.getItem(\"movie-queue\"));\nlocalStorage.setItem(\"movie-queue\", JSON.stringify(queue));\n\nJSON.parse(localStorage.getItem(\"movie-watched\")) === null? watched = [] : watched = JSON.parse(localStorage.getItem(\"movie-watched\")) ;\nlocalStorage.setItem(\"movie-watched\", JSON.stringify(watched));\n\n\n// MODAL SECTION\nconst modal = document.getElementById('myModal');\nconst modalPoster = document.getElementById('modal-poster');\nconst modalTitle = document.getElementById('modal-title');\nconst modalVote = document.getElementById('modal-vote');\nconst modalPopularity = document.getElementById('modal-popularity');\nconst modalOrigTitle = document.getElementById('modal-original-title');\nconst modalGenre = document.getElementById('modal-genre');\nconst modalOverview = document.getElementById('modal-overview');\nconst addToWatchedBtn = document.getElementById('addToWatchedBtn');\nconst addToQueuBtn = document.getElementById('addToQueuBtn');\nconst closeBtn = document.getElementsByClassName('close')[0];\n\nlet genres; \n\nfetch(getGenres)\n    .then(response => response.json())\n    .then(data => {\n        genres = data.genres;\n      getMovies(API_URL, genres); // Call getMovies with genres\n      showMovies(data, genres)\n    })\n    .catch(error => {\n        console.error('Error fetching genres:', error);\n    });\n\n// function to open the modal with movie details\nfunction openModal(movie) {\n\n  modalPoster.src = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n  modalTitle.textContent = movie.title.toUpperCase();\n  modalVote.textContent =\n    movie.vote_average.toFixed(1) + '   /   ' + movie.vote_count;\n  modalPopularity.textContent = movie.popularity.toFixed(1);\n  modalOrigTitle.textContent = movie.original_title.toUpperCase();\n  // modalGenre.textContent = movie.genre_ids;\n\n  const movieGenres = movie.genre_ids.map(genreId => {\n    const genre = genres.find(genre => genre.id === genreId);\n    return genre ? genre.name : '';\n}).join(', ');\n\nmodalGenre.textContent = movieGenres;\n  modalOverview.textContent = movie.overview;\n  modal.style.display = 'block';\n  currentMovieID = movie.id;\n  currentMovieTitle = movie.original_title;\n}\n\n// function to close the modal\nfunction closeModal() {\n  modal.style.display = 'none';\n}\n\n// event listener for the close button\ncloseBtn.addEventListener('click', closeModal);\n\n// event listener for clicks outside the modal\nwindow.addEventListener('click', function (event) {\n  if (event.target === modal) {\n    closeModal();\n  }\n});\n\nconst main = document.getElementById('main');\nconst form = document.getElementById('search-form');\nconst search = document.getElementById('search-input');\nconst loader = document.querySelector('.loader-container');\n\n// PAGINATION\n\n\ngetMovies(API_URL);\n\nlet lastUrl;\n// DISPLAY MOVIE CARDS\nfunction getMovies(url) {\n  lastUrl = url;\n  \n  main.classList.toggle('is-hidden');\n  loader.classList.toggle('is-hidden');\n\n  fetch(url)\n    .then(res => res.json())\n    .then(data => {\n      console.log(data.results);\n      if (data.results.length !== 0) {\n        showMovies(data.results);\n        currentPage = data.page;\n        nextPage = currentPage + 1;\n        prevPage = currentPage - 1;\n        totalPages = data.total_pages;\n        main.classList.toggle('is-hidden');\n        loader.classList.toggle('is-hidden');\n\n        current.innerText = currentPage;\n        if (currentPage <= 1) {\n          prev.classList.add('disabled');\n          next.classList.remove('disabled');\n        } else if (currentPage >= totalPages) {\n          prev.classList.remove('disabled');\n          next.classList.add('disabled');\n        } else {\n          prev.classList.remove('disabled');\n          next.classList.remove('disabled');\n        }\n      } else {\n        main.classList.toggle('is-hidden');\n        loader.classList.toggle('is-hidden');\n        main.innerHTML = `<h1 class=\"no-results\">No Results Found</h1>`;\n      }\n    })\n    .catch(error => {\n      console.error('Error fetching movies:', error);\n      main.classList.toggle('is-hidden');\n      loader.classList.toggle('is-hidden');\n      main.innerHTML = `<h1 class=\"no-results\">Error fetching movies</h1>`;\n  });\n}\n\nfunction showMovies(data) {\n  main.innerHTML = '';\n\n  data.forEach(movie => {\n    const { title, poster_path, release_date, genre_ids } = movie;\n    const movieEl = document.createElement('div');\n    movieEl.classList.add('movie');\n\n    const movieGenres = genre_ids && Array.isArray(genres)\n            ? genre_ids.map(genreId => {\n                const genre = genres.find(genre => genre.id === genreId);\n                return genre ? genre.name : '';\n            }).join(', ')\n        : '';\n    \n        const releaseYear = release_date ? (new Date(release_date)).getFullYear() : '';\n\n    movieEl.innerHTML = `\n            <img src=\"${\n              poster_path\n                ? IMG_URL + poster_path\n                : 'http:/>/via.placeholder.com/1080x1500'\n            }\"\n                alt=\"${title}\"/>\n            \n            <div class=\"movie-info\">\n                <h3>${title.toUpperCase()}</h3>\n                <div class=\"movie-details\">\n                    <span id=\"genre\">${movieGenres}</span> |\n                    <span id=\"release_date\">${release_date.slice(\n      0,\n      4\n    )}</span>\n                </div>\n            </div>        \n        `;\n    movieEl.addEventListener('click', function () {\n      openModal(movie);\n    });\n    main.appendChild(movieEl);\n  });\n}\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const searchTerm = search.value;\n\n  if (searchTerm) {\n    getMovies(searchURL + '&query=' + searchTerm);\n  } else {\n    getMovies(API_URL);\n  }\n});\n\n// function for previous page\nprev.addEventListener('click', () => {\n  if (prevPage > 0) {\n    pageCall(prevPage);\n  }\n});\n\n// function for the next page\nnext.addEventListener('click', () => {\n  if (nextPage <= totalPages) {\n    pageCall(nextPage);\n  }\n});\n\nexport function pageCall(page) {\n  let urlSplit = lastUrl.split('?');\n  let queryParams = urlSplit[1].split('&');\n  let key = queryParams[queryParams.length - 1].split('=');\n  if (key[0] != 'page') {\n    let url = lastUrl + '&page=' + page;\n    getMovies(url);\n  } else {\n    key[1] = page.toString();\n    let a = key.join('=');\n    queryParams[queryParams.length - 1] = a;\n    let b = queryParams.join('&');\n    let url = urlSplit[0] + '?' + b;\n    getMovies(url);\n  }\n}\n\n\n//Clicking a movie\nmain.addEventListener('click', e => {\n  let currentMovie = e.target.parentElement;\n  currentMovieTitle = currentMovie.lastElementChild.firstElementChild.innerText;\n  console.log(currentMovieTitle);\n});\n\n//Add to Watched (localStorage)\naddToWatchedBtn.addEventListener('click', () => {\n  watched.includes(currentMovieTitle)\n    ? alert(`${currentMovieTitle} has been watched already`)\n    : watched.push(currentMovieTitle);\n  localStorage.setItem('movie-watched', JSON.stringify(watched));\n});\n\n//Add to Queue (localStorage)\naddToQueuBtn.addEventListener('click', () => {\n  queue.includes(currentMovieTitle)\n    ? alert(`${currentMovieTitle} has been added to the queue already`)\n    : queue.push(currentMovieTitle);\n  localStorage.setItem('movie-queue', JSON.stringify(queue));\n});\n\n//Add to Watched (localStorage)\naddToWatchedBtn.addEventListener('click', () => {\n    watched.includes(currentMovieID) ? \n        alert(`${currentMovieTitle} has been watched already`) :\n        watched.push(currentMovieID);\n        localStorage.setItem('movie-watched', JSON.stringify(watched));\n})\n\n//Add to Queue (localStorage)\naddToQueuBtn.addEventListener('click', () => {\n    queue.includes(currentMovieID) ? \n        alert(`${currentMovieTitle} has been added to the queue already`) :\n        queue.push(currentMovieID);\n        localStorage.setItem('movie-queue', JSON.stringify(queue));\n})\n\n//Pressing escape to close modal\ndocument.body.addEventListener('keydown', event => {\n  if (event.code === 'Escape') {\n    closeModal();\n  }\n});\n"],"names":["$66b821ea461d9f2a$var$currentMovieTitle","$66b821ea461d9f2a$var$currentMovieID","$66b821ea461d9f2a$var$queue","$66b821ea461d9f2a$var$watched","$66b821ea461d9f2a$var$API_KEY","$66b821ea461d9f2a$var$API_URL","$66b821ea461d9f2a$var$BASE_URL","JSON","parse","localStorage","getItem","setItem","stringify","$66b821ea461d9f2a$var$genres","$66b821ea461d9f2a$var$modal","document","getElementById","$66b821ea461d9f2a$var$modalPoster","$66b821ea461d9f2a$var$modalTitle","$66b821ea461d9f2a$var$modalVote","$66b821ea461d9f2a$var$modalPopularity","$66b821ea461d9f2a$var$modalOrigTitle","$66b821ea461d9f2a$var$modalGenre","$66b821ea461d9f2a$var$modalOverview","$66b821ea461d9f2a$var$addToWatchedBtn","$66b821ea461d9f2a$var$addToQueuBtn","$66b821ea461d9f2a$var$closeBtn","getElementsByClassName","$66b821ea461d9f2a$var$closeModal","style","display","fetch","then","response","json","data","genres","$66b821ea461d9f2a$var$getMovies","$66b821ea461d9f2a$var$showMovies","catch","error","console","addEventListener","window","event","target","$66b821ea461d9f2a$var$lastUrl","$66b821ea461d9f2a$var$main","$66b821ea461d9f2a$var$form","$66b821ea461d9f2a$var$search","$66b821ea461d9f2a$var$loader","querySelector","url","classList","toggle","res","log","results","length","currentPage","page","nextPage","prevPage","totalPages","total_pages","current","innerText","prev","add","next","remove","innerHTML","forEach","movie","title","poster_path","release_date","genre_ids","movieEl","createElement","movieGenres","Array","isArray","map","genreId","genre2","find","genre","id","name","join","Date","getFullYear","concat","toUpperCase","slice","src","textContent","vote_average","toFixed","vote_count","popularity","original_title","genre1","overview","$66b821ea461d9f2a$var$openModal","appendChild","$66b821ea461d9f2a$export$26f0a13c57387c91","urlSplit","split","queryParams","key","toString","a","b","e","preventDefault","searchTerm","value","$66b821ea461d9f2a$var$searchURL","currentMovie","parentElement","lastElementChild","firstElementChild","includes","alert","push","body","code"],"version":3,"file":"index.3b0a48bb.js.map"}