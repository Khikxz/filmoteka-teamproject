{"mappings":"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","sources":["src/js/script.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=b5e824a3d922f68ba211fcf6dbdcb6f5';\nconst API_URL = BASE_URL + '/discover/movie?sort_by-popularity.desc&' + API_KEY;\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst searchURL = BASE_URL + '/search/movie?' + API_KEY;\nconst getGenres = BASE_URL + '/genre/movie/list' + API_KEY;\n\n\nconst options = {\n  params: {\n    key: API_KEY,\n    query: '',\n    include_adult: false,\n    language: 'en-US',\n    primary_release_year: '',\n    page: 1,\n    region: '',\n    year: '',\n  },\n};\n\n//localStorage\nlet currentMovieTitle, currentMovieID, queue, watched;\nJSON.parse(localStorage.getItem(\"movie-queue\")) === null? queue = [] : queue = JSON.parse(localStorage.getItem(\"movie-queue\"));\nlocalStorage.setItem(\"movie-queue\", JSON.stringify(queue));\n\nJSON.parse(localStorage.getItem(\"movie-watched\")) === null? watched = [] : watched = JSON.parse(localStorage.getItem(\"movie-watched\")) ;\nlocalStorage.setItem(\"movie-watched\", JSON.stringify(watched));\n\n\n// MODAL SECTION\nconst modal = document.getElementById('myModal');\nconst modalPoster = document.getElementById('modal-poster');\nconst modalTitle = document.getElementById('modal-title');\nconst modalVote = document.getElementById('modal-vote');\nconst modalPopularity = document.getElementById('modal-popularity');\nconst modalOrigTitle = document.getElementById('modal-original-title');\nconst modalGenre = document.getElementById('modal-genre');\nconst modalOverview = document.getElementById('modal-overview');\nconst addToWatchedBtn = document.getElementById('addToWatchedBtn');\nconst addToQueuBtn = document.getElementById('addToQueuBtn');\nconst closeBtn = document.getElementsByClassName('close')[0];\n\n// function to open the modal with movie details\nfunction openModal(movie) {\n\n  modalPoster.src = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n  modalTitle.textContent = movie.title.toUpperCase();\n  modalVote.textContent =\n    movie.vote_average.toFixed(1) + '   /   ' + movie.vote_count;\n  modalPopularity.textContent = movie.popularity.toFixed(1);\n  modalOrigTitle.textContent = movie.original_title.toUpperCase();\n  modalGenre.textContent = movie.genre;\n  modalOverview.textContent = movie.overview;\n  modal.style.display = 'block';\n\n    modalPoster.src = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n    modalTitle.textContent = movie.title;\n    modalVote.textContent = movie.vote_average+'/'+movie.vote_count;\n    modalPopularity.textContent = movie.popularity;\n    modalOrigTitle.textContent = movie.original_title;\n    modalGenre.textContent = movie.genre_ids;\n    modalOverview.textContent = movie.overview;\n    modal.style.display = \"block\";\n    currentMovieID = movie.id;\n    currentMovieTitle = movie.original_title;\n\n}\n\n// function to close the modal\nfunction closeModal() {\n  modal.style.display = 'none';\n}\n\n// event listener for the close button\ncloseBtn.addEventListener('click', closeModal);\n\n// event listener for clicks outside the modal\nwindow.addEventListener('click', function (event) {\n  if (event.target === modal) {\n    closeModal();\n  }\n});\n\nconst main = document.getElementById('main');\nconst form = document.getElementById('search-form');\nconst search = document.getElementById('search-input');\nconst galleryEl = document.getElementById('gallery');\nconst loader = document.querySelector('.loader-container');\n\n// PAGINATION\n\ngetMovies(API_URL);\n\n// DISPLAY MOVIE CARDS\nfunction getMovies(url) {\n  lastUrl = url;\n  \n  main.classList.toggle('is-hidden');\n  loader.classList.toggle('is-hidden');\n\n  fetch(url)\n    .then(res => res.json())\n    .then(data => {\n      console.log(data.results);\n      if (data.results.length !== 0) {\n        showMovies(data.results);\n        currentPage = data.page;\n        nextPage = currentPage + 1;\n        prevPage = currentPage - 1;\n        totalPages = data.total_pages;\n        main.classList.toggle('is-hidden');\n        loader.classList.toggle('is-hidden');\n\n        current.innerText = currentPage;\n        if (currentPage <= 1) {\n          prev.classList.add('disabled');\n          next.classList.remove('disabled');\n        } else if (currentPage >= totalPages) {\n          prev.classList.remove('disabled');\n          next.classList.add('disabled');\n        } else {\n          prev.classList.remove('disabled');\n          next.classList.remove('disabled');\n        }\n      } else {\n        main.classList.toggle('is-hidden');\n        loader.classList.toggle('is-hidden');\n        main.innerHTML = `<h1 class=\"no-results\">No Results Found</h1>`;\n      }\n    });\n}\n\nfunction showMovies(data) {\n  main.innerHTML = '';\n\n  data.forEach(movie => {\n    const { title, poster_path, release_date, genre_ids } = movie;\n    const movieEl = document.createElement('div');\n    movieEl.classList.add('movie');\n    movieEl.innerHTML = `\n            <img src=\"${\n              poster_path\n                ? IMG_URL + poster_path\n                : 'http:/>/via.placeholder.com/1080x1500'\n            }\"\n                alt=\"${title}\"/>\n            \n            <div class=\"movie-info\">\n                <h3>${title.toUpperCase()}</h3>\n                <div class=\"movie-details\">\n                    <span id=\"genre\" class=\"${genre_ids}\">${genre_ids}</span> |\n                    <span id=\"release_date\" class=\"${release_date}\">${release_date.slice(\n      0,\n      4\n    )}</span>\n                </div>\n            </div>        \n        `;\n    movieEl.addEventListener('click', function () {\n      openModal(movie);\n    });\n    main.appendChild(movieEl);\n  });\n}\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const searchTerm = search.value;\n\n  if (searchTerm) {\n    getMovies(searchURL + '&query=' + searchTerm);\n  } else {\n    getMovies(API_URL);\n  }\n});\n\n// function for previous page\nprev.addEventListener('click', () => {\n  if (prevPage > 0) {\n    pageCall(prevPage);\n  }\n});\n\n// function for the next page\nnext.addEventListener('click', () => {\n  if (nextPage <= totalPages) {\n    pageCall(nextPage);\n  }\n});\n\nexport function pageCall(page) {\n  let urlSplit = lastUrl.split('?');\n  let queryParams = urlSplit[1].split('&');\n  let key = queryParams[queryParams.length - 1].split('=');\n  if (key[0] != 'page') {\n    let url = lastUrl + '&page=' + page;\n    getMovies(url);\n  } else {\n    key[1] = page.toString();\n    let a = key.join('=');\n    queryParams[queryParams.length - 1] = a;\n    let b = queryParams.join('&');\n    let url = urlSplit[0] + '?' + b;\n    getMovies(url);\n  }\n}\n\n\n//Clicking a movie\nmain.addEventListener('click', e => {\n  let currentMovie = e.target.parentElement;\n  currentMovieTitle = currentMovie.lastElementChild.firstElementChild.innerText;\n  console.log(currentMovieTitle);\n});\n\n//Add to Watched (localStorage)\naddToWatchedBtn.addEventListener('click', () => {\n  watched.includes(currentMovieTitle)\n    ? alert(`${currentMovieTitle} has been watched already`)\n    : watched.push(currentMovieTitle);\n  localStorage.setItem('movie-watched', JSON.stringify(watched));\n});\n\n//Add to Queue (localStorage)\naddToQueuBtn.addEventListener('click', () => {\n  queue.includes(currentMovieTitle)\n    ? alert(`${currentMovieTitle} has been added to the queue already`)\n    : queue.push(currentMovieTitle);\n  localStorage.setItem('movie-queue', JSON.stringify(queue));\n});\n\n//Add to Watched (localStorage)\naddToWatchedBtn.addEventListener('click', () => {\n    watched.includes(currentMovieID) ? \n        alert(`${currentMovieTitle} has been watched already`) :\n        watched.push(currentMovieID);\n        localStorage.setItem('movie-watched', JSON.stringify(watched));\n})\n\n//Add to Queue (localStorage)\naddToQueuBtn.addEventListener('click', () => {\n    queue.includes(currentMovieID) ? \n        alert(`${currentMovieTitle} has been added to the queue already`) :\n        queue.push(currentMovieID);\n        localStorage.setItem('movie-queue', JSON.stringify(queue));\n})\n\n\n\n//Pressing escape to close modal\ndocument.body.addEventListener('keydown', event => {\n  if (event.code === 'Escape') {\n    closeModal();\n  }\n});\n"],"names":["$1ee2b6306238ec66$var$API_KEY","$1ee2b6306238ec66$var$API_URL","$1ee2b6306238ec66$var$BASE_URL","$1ee2b6306238ec66$var$IMG_URL","$1ee2b6306238ec66$var$currentMovieTitle","$1ee2b6306238ec66$var$currentMovieID","$1ee2b6306238ec66$var$queue","$1ee2b6306238ec66$var$watched","JSON","parse","localStorage","getItem","setItem","stringify","$1ee2b6306238ec66$var$modal","document","getElementById","$1ee2b6306238ec66$var$modalPoster","$1ee2b6306238ec66$var$modalTitle","$1ee2b6306238ec66$var$modalVote","$1ee2b6306238ec66$var$modalPopularity","$1ee2b6306238ec66$var$modalOrigTitle","$1ee2b6306238ec66$var$modalGenre","$1ee2b6306238ec66$var$modalOverview","$1ee2b6306238ec66$var$addToWatchedBtn","$1ee2b6306238ec66$var$addToQueuBtn","$1ee2b6306238ec66$var$closeModal","style","display","getElementsByClassName","addEventListener","window","event","target","$1ee2b6306238ec66$var$main","$1ee2b6306238ec66$var$form","$1ee2b6306238ec66$var$search","$1ee2b6306238ec66$var$loader","querySelector","$1ee2b6306238ec66$var$getMovies","url","lastUrl","classList","toggle","fetch","then","res","json","data","console","log","results","length","innerHTML","forEach","movie","title","poster_path","release_date","genre_ids","movieEl","createElement","add","toUpperCase","slice","src","textContent","vote_average","toFixed","vote_count","popularity","original_title","genre","overview","id","$1ee2b6306238ec66$var$openModal","appendChild","$1ee2b6306238ec66$var$showMovies","currentPage","page","nextPage","prevPage","totalPages","total_pages","current","innerText","prev","next","remove","$1ee2b6306238ec66$export$26f0a13c57387c91","urlSplit","split","queryParams","key","toString","a","join","b","e","preventDefault","searchTerm","value","$1ee2b6306238ec66$var$searchURL","currentMovie","parentElement","lastElementChild","firstElementChild","includes","alert","push","body","code"],"version":3,"file":"index.682a1ea8.js.map"}