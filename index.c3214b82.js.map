{"mappings":"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","sources":["src/js/script.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\n  const API_KEY = 'api_key=b5e824a3d922f68ba211fcf6dbdcb6f5';\n  const API_URL = BASE_URL + '/discover/movie?sort_by-popularity.desc&' + API_KEY;\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n  const searchURL = BASE_URL + '/search/movie?' + API_KEY;\n  const getGenres = BASE_URL + '/genre/movie/list?' + API_KEY;\n  //localStorage\n  let currentMovieTitle, currentMovieID, queue, watched;\n  JSON.parse(localStorage.getItem(\"movie-queue\")) === null ? queue = [] : queue = JSON.parse(localStorage.getItem(\"movie-queue\"));\n  localStorage.setItem(\"movie-queue\", JSON.stringify(queue));\n  JSON.parse(localStorage.getItem(\"movie-watched\")) === null ? watched = [] : watched = JSON.parse(localStorage.getItem(\"movie-watched\"));\n  localStorage.setItem(\"movie-watched\", JSON.stringify(watched));\n  // MODAL SECTION\n  const modal = document.getElementById('myModal');\n  const modalPoster = document.getElementById('modal-poster');\n  const modalTitle = document.getElementById('modal-title');\n  const modalVote = document.getElementById('modal-vote');\n  const modalPopularity = document.getElementById('modal-popularity');\n  const modalOrigTitle = document.getElementById('modal-original-title');\n  const modalGenre = document.getElementById('modal-genre');\n  const modalOverview = document.getElementById('modal-overview');\n  const addToWatchedBtn = document.getElementById('addToWatchedBtn');\n  const addToQueuBtn = document.getElementById('addToQueuBtn');\nconst closeBtn = document.getElementsByClassName('close')[0];\nlet genres;\nfetch(getGenres)\n    .then(response => response.json())\n    .then(data => {\n        genres = data.genres;\n      getMovies(API_URL, genres); // Call getMovies with genres\n      showMovies(data, genres)\n    })\n    .catch(error => {\n        // console.error('Error fetching genres:', error);\n    });\n  // function to open the modal with movie details\n  function openModal(movie) {\n    modalPoster.src = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n    modalTitle.textContent = movie.title.toUpperCase();\n    modalVote.innerHTML = `\n      <span class=\"vote-avg\">${movie.vote_average.toFixed(1)}</span>` + '   /   ' + movie.vote_count;\n    modalPopularity.textContent = movie.popularity.toFixed(1);\n    modalOrigTitle.textContent = movie.original_title.toUpperCase();\n    // modalGenre.textContent = movie.genre;\n    const movieGenres = movie.genre_ids.map(genreId => {\n        const genre = genres.find(genre => genre.id === genreId);\n        return genre ? genre.name : '';\n    }).join(', ');\n    modalGenre.textContent = movieGenres;\n    modalOverview.textContent = movie.overview;\n    modal.style.display = 'block';\n  }\n  // function to close the modal\n  function closeModal() {\n    modal.style.display = 'none';\n  }\n  // event listener for the close button\n  closeBtn.addEventListener('click', closeModal);\n  // event listener for clicks outside the modal\n  window.addEventListener('click', function (event) {\n    if (event.target === modal) {\n      closeModal();\n    }\n  });\n  const main = document.getElementById('main');\n  const form = document.getElementById('search-form');\n  const search = document.getElementById('search-input');\n  const galleryEl = document.getElementById('gallery');\n  const loader = document.querySelector('.loader-container');\n  // PAGINATION\n  let lastUrl;\n  getMovies(API_URL);\n  // DISPLAY MOVIE CARDS\n  function getMovies(url) {\n    lastUrl = url;\n    main.classList.toggle('is-hidden');\n    loader.classList.toggle('is-hidden');\n    fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data.results);\n        if (data.results.length !== 0) {\n          showMovies(data.results);\n          // currentPage = data.page;\n          // nextPage = currentPage + 1;\n          // prevPage = currentPage - 1;\n          // totalPages = data.total_pages;\n          // main.classList.toggle('is-hidden');\n          // loader.classList.toggle('is-hidden');\n          // current.innerText = currentPage;\n        //   if (currentPage <= 1) {\n        //     prev.classList.add('disabled');\n        //     next.classList.remove('disabled');\n        //   } else if (currentPage >= totalPages) {\n        //     prev.classList.remove('disabled');\n        //     next.classList.add('disabled');\n        //   } else {\n        //     prev.classList.remove('disabled');\n        //     next.classList.remove('disabled');\n        //   }\n        // } else {\n        //   main.classList.toggle('is-hidden');\n        //   loader.classList.toggle('is-hidden');\n        //   main.innerHTML = `<h1 class=\"no-results\">No Results Found</h1>`;\n        }\n      });\n  }\nfunction showMovies(data) {\n    main.innerHTML = '';\n    data.forEach(movie => {\n      const { title, poster_path, release_date, genre_ids } = movie;\n      const movieEl = document.createElement('div');\n      movieEl.classList.add('movie');\n      const movieGenres = genre_ids && Array.isArray(genres)\n            ? genre_ids.map(genreId => {\n                const genre = genres.find(genre => genre.id === genreId);\n                return genre ? genre.name : '';\n            }).join(', ')\n        : '';\n      movieEl.innerHTML = `\n            <img src=\"${poster_path\n          ? IMG_URL + poster_path\n          : 'http:/>/via.placeholder.com/1080x1500'\n        }\"\n                alt=\"${title}\"/>\n            <div class=\"movie-info\">\n                <h3>${title.toUpperCase()}</h3>\n                <div class=\"movie-details\">\n                <span id=\"genre\">${movieGenres}</span> |\n                <span id=\"release_date\" class=\"${release_date}\">${release_date.slice(\n                  0,\n                  4\n                  )}</span>\n                  </div>\n                  </div>\n                  `;\n                  movieEl.addEventListener('click', function () {\n                    openModal(movie);\n                  });\n      main.appendChild(movieEl);\n    });\n  }\n  form.addEventListener('submit', e => {\n    e.preventDefault();\n    const searchTerm = search.value;\n    if (searchTerm) {\n      getMovies(searchURL + '&query=' + searchTerm);\n    } else {\n      getMovies(API_URL);\n    }\n  });\n  // function for previous page\n  prev.addEventListener('click', () => {\n    if (prevPage > 0) {\n      pageCall(prevPage);\n    }\n  });\n  // function for the next page\n  next.addEventListener('click', () => {\n    if (nextPage <= totalPages) {\n      pageCall(nextPage);\n    }\n  });\n  export function pageCall(page) {\n    let urlSplit = lastUrl.split('?');\n    let queryParams = urlSplit[1].split('&');\n    let key = queryParams[queryParams.length - 1].split('=');\n    if (key[0] != 'page') {\n      let url = lastUrl + '&page=' + page;\n      getMovies(url);\n    } else {\n      key[1] = page.toString();\n      let a = key.join('=');\n      queryParams[queryParams.length - 1] = a;\n      let b = queryParams.join('&');\n      let url = urlSplit[0] + '?' + b;\n      getMovies(url);\n    }\n  }\n  //Clicking a movie\n  main.addEventListener('click', e => {\n    let currentMovie = e.target.parentElement;\n    currentMovieTitle = currentMovie.lastElementChild.firstElementChild.innerText;\n    console.log(currentMovieTitle);\n  });\n  //Add to Watched (localStorage)\n  addToWatchedBtn.addEventListener('click', () => {\n    watched.includes(currentMovieTitle)\n      ? alert(`${currentMovieTitle} has been watched already`)\n      : watched.push(currentMovieTitle);\n    localStorage.setItem('movie-watched', JSON.stringify(watched));\n  });\n  //Add to Queue (localStorage)\n  addToQueuBtn.addEventListener('click', () => {\n    queue.includes(currentMovieTitle)\n      ? alert(`${currentMovieTitle} has been added to the queue already`)\n      : queue.push(currentMovieTitle);\n    localStorage.setItem('movie-queue', JSON.stringify(queue));\n  });\n  //Add to Watched (localStorage)\n  addToWatchedBtn.addEventListener('click', () => {\n    watched.includes(currentMovieID) ?\n      alert(`${currentMovieTitle} has been watched already`) :\n      watched.push(currentMovieID);\n    localStorage.setItem('movie-watched', JSON.stringify(watched));\n  })\n  //Add to Queue (localStorage)\n  addToQueuBtn.addEventListener('click', () => {\n    queue.includes(currentMovieID) ?\n      alert(`${currentMovieTitle} has been added to the queue already`) :\n      queue.push(currentMovieID);\n    localStorage.setItem('movie-queue', JSON.stringify(queue));\n  })\n  //Pressing escape to close modal\n  document.body.addEventListener('keydown', event => {\n    if (event.code === 'Escape') {\n      closeModal();\n    }\n  });"],"names":["$1ee2b6306238ec66$var$API_KEY","$1ee2b6306238ec66$var$API_URL","$1ee2b6306238ec66$var$BASE_URL","$1ee2b6306238ec66$var$currentMovieTitle","$1ee2b6306238ec66$var$currentMovieID","$1ee2b6306238ec66$var$queue","$1ee2b6306238ec66$var$watched","JSON","parse","localStorage","getItem","setItem","stringify","$1ee2b6306238ec66$var$modal","document","getElementById","$1ee2b6306238ec66$var$modalPoster","$1ee2b6306238ec66$var$modalTitle","$1ee2b6306238ec66$var$modalVote","$1ee2b6306238ec66$var$modalPopularity","$1ee2b6306238ec66$var$modalOrigTitle","$1ee2b6306238ec66$var$modalGenre","$1ee2b6306238ec66$var$modalOverview","$1ee2b6306238ec66$var$addToWatchedBtn","$1ee2b6306238ec66$var$addToQueuBtn","$1ee2b6306238ec66$var$closeBtn","getElementsByClassName","$1ee2b6306238ec66$var$genres","$1ee2b6306238ec66$var$closeModal","style","display","fetch","then","response","json","data","genres","$1ee2b6306238ec66$var$getMovies","$1ee2b6306238ec66$var$showMovies","catch","error","addEventListener","window","event","target","$1ee2b6306238ec66$var$main","$1ee2b6306238ec66$var$form","$1ee2b6306238ec66$var$search","$1ee2b6306238ec66$var$loader","querySelector","$1ee2b6306238ec66$var$lastUrl","url","classList","toggle","res","console","log","results","length","innerHTML","forEach","movie","title","poster_path","release_date","genre_ids","movieEl","createElement","add","movieGenres","Array","isArray","map","genreId","genre2","find","genre","id","name","join","toUpperCase","slice","src","textContent","vote_average","toFixed","vote_count","popularity","original_title","genre1","overview","$1ee2b6306238ec66$var$openModal","appendChild","$1ee2b6306238ec66$export$26f0a13c57387c91","page","urlSplit","split","queryParams","key","toString","a","b","e","preventDefault","searchTerm","value","$1ee2b6306238ec66$var$searchURL","prev","prevPage","next","nextPage","totalPages","currentMovie","parentElement","lastElementChild","firstElementChild","innerText","includes","alert","push","body","code"],"version":3,"file":"index.c3214b82.js.map"}