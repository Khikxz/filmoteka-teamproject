{"mappings":"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","sources":["src/js/script.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\n  const API_KEY = 'api_key=b5e824a3d922f68ba211fcf6dbdcb6f5';\n  const API_URL = BASE_URL + '/discover/movie?sort_by-popularity.desc&' + API_KEY;\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n  const searchURL = BASE_URL + '/search/movie?' + API_KEY;\n  const getGenres = BASE_URL + '/genre/movie/list?' + API_KEY;\n  //localStorage\n  let currentMovieTitle, currentMovieID, queue, watched;\n  JSON.parse(localStorage.getItem(\"movie-queue\")) === null ? queue = [] : queue = JSON.parse(localStorage.getItem(\"movie-queue\"));\n  localStorage.setItem(\"movie-queue\", JSON.stringify(queue));\n  JSON.parse(localStorage.getItem(\"movie-watched\")) === null ? watched = [] : watched = JSON.parse(localStorage.getItem(\"movie-watched\"));\n  localStorage.setItem(\"movie-watched\", JSON.stringify(watched));\n  // MODAL SECTION\n  const modal = document.getElementById('myModal');\n  const modalPoster = document.getElementById('modal-poster');\n  const modalTitle = document.getElementById('modal-title');\n  const modalVote = document.getElementById('modal-vote');\n  const modalPopularity = document.getElementById('modal-popularity');\n  const modalOrigTitle = document.getElementById('modal-original-title');\n  const modalGenre = document.getElementById('modal-genre');\n  const modalOverview = document.getElementById('modal-overview');\n  const addToWatchedBtn = document.getElementById('addToWatchedBtn');\n  const addToQueuBtn = document.getElementById('addToQueuBtn');\nconst closeBtn = document.getElementsByClassName('close')[0];\nlet genres;\nfetch(getGenres)\n    .then(response => response.json())\n    .then(data => {\n        genres = data.genres;\n      getMovies(API_URL, genres); // Call getMovies with genres\n      showMovies(data, genres)\n    })\n    .catch(error => {\n        console.error('Error fetching genres:', error);\n    });\n  // function to open the modal with movie details\n  function openModal(movie) {\n    modalPoster.src = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n    modalTitle.textContent = movie.title.toUpperCase();\n    modalVote.textContent =\n      movie.vote_average.toFixed(1) + '   /   ' + movie.vote_count;\n    modalPopularity.textContent = movie.popularity.toFixed(1);\n    modalOrigTitle.textContent = movie.original_title.toUpperCase();\n    // modalGenre.textContent = movie.genre;\n    const movieGenres = movie.genre_ids.map(genreId => {\n        const genre = genres.find(genre => genre.id === genreId);\n        return genre ? genre.name : '';\n    }).join(', ');\n    modalGenre.textContent = movieGenres;\n    modalOverview.textContent = movie.overview;\n    modal.style.display = 'block';\n  }\n  // function to close the modal\n  function closeModal() {\n    modal.style.display = 'none';\n  }\n  // event listener for the close button\n  closeBtn.addEventListener('click', closeModal);\n  // event listener for clicks outside the modal\n  window.addEventListener('click', function (event) {\n    if (event.target === modal) {\n      closeModal();\n    }\n  });\n  const main = document.getElementById('main');\n  const form = document.getElementById('search-form');\n  const search = document.getElementById('search-input');\n  const galleryEl = document.getElementById('gallery');\n  const loader = document.querySelector('.loader-container');\n  // PAGINATION\n  let lastUrl;\n  getMovies(API_URL);\n  // DISPLAY MOVIE CARDS\n  function getMovies(url) {\n    lastUrl = url;\n    main.classList.toggle('is-hidden');\n    loader.classList.toggle('is-hidden');\n    fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data.results);\n        if (data.results.length !== 0) {\n          showMovies(data.results);\n          currentPage = data.page;\n          nextPage = currentPage + 1;\n          prevPage = currentPage - 1;\n          totalPages = data.total_pages;\n          main.classList.toggle('is-hidden');\n          loader.classList.toggle('is-hidden');\n          current.innerText = currentPage;\n          if (currentPage <= 1) {\n            prev.classList.add('disabled');\n            next.classList.remove('disabled');\n          } else if (currentPage >= totalPages) {\n            prev.classList.remove('disabled');\n            next.classList.add('disabled');\n          } else {\n            prev.classList.remove('disabled');\n            next.classList.remove('disabled');\n          }\n        } else {\n          main.classList.toggle('is-hidden');\n          loader.classList.toggle('is-hidden');\n          main.innerHTML = `<h1 class=\"no-results\">No Results Found</h1>`;\n        }\n      });\n  }\nfunction showMovies(data) {\n    main.innerHTML = '';\n    data.forEach(movie => {\n      const { title, poster_path, release_date, genre_ids } = movie;\n      const movieEl = document.createElement('div');\n      movieEl.classList.add('movie');\n      const movieGenres = genre_ids && Array.isArray(genres)\n            ? genre_ids.map(genreId => {\n                const genre = genres.find(genre => genre.id === genreId);\n                return genre ? genre.name : '';\n            }).join(', ')\n        : '';\n      movieEl.innerHTML = `\n            <img src=\"${poster_path\n          ? IMG_URL + poster_path\n          : 'http:/>/via.placeholder.com/1080x1500'\n        }\"\n                alt=\"${title}\"/>\n            <div class=\"movie-info\">\n                <h3>${title.toUpperCase()}</h3>\n                <div class=\"movie-details\">\n                <span id=\"genre\">${movieGenres}</span> |\n                <span id=\"release_date\" class=\"${release_date}\">${release_date.slice(\n                  0,\n                  4\n                  )}</span>\n                  </div>\n                  </div>\n                  `;\n                  movieEl.addEventListener('click', function () {\n                    openModal(movie);\n                  });\n      main.appendChild(movieEl);\n    });\n  }\n  form.addEventListener('submit', e => {\n    e.preventDefault();\n    const searchTerm = search.value;\n    if (searchTerm) {\n      getMovies(searchURL + '&query=' + searchTerm);\n    } else {\n      getMovies(API_URL);\n    }\n  });\n  // function for previous page\n  prev.addEventListener('click', () => {\n    if (prevPage > 0) {\n      pageCall(prevPage);\n    }\n  });\n  // function for the next page\n  next.addEventListener('click', () => {\n    if (nextPage <= totalPages) {\n      pageCall(nextPage);\n    }\n  });\n  function pageCall(page) {\n    let urlSplit = lastUrl.split('?');\n    let queryParams = urlSplit[1].split('&');\n    let key = queryParams[queryParams.length - 1].split('=');\n    if (key[0] != 'page') {\n      let url = lastUrl + '&page=' + page;\n      getMovies(url);\n    } else {\n      key[1] = page.toString();\n      let a = key.join('=');\n      queryParams[queryParams.length - 1] = a;\n      let b = queryParams.join('&');\n      let url = urlSplit[0] + '?' + b;\n      getMovies(url);\n    }\n  }\n  //Clicking a movie\n  main.addEventListener('click', e => {\n    let currentMovie = e.target.parentElement;\n    currentMovieTitle = currentMovie.lastElementChild.firstElementChild.innerText;\n    console.log(currentMovieTitle);\n  });\n  //Add to Watched (localStorage)\n  addToWatchedBtn.addEventListener('click', () => {\n    watched.includes(currentMovieTitle)\n      ? alert(`${currentMovieTitle} has been watched already`)\n      : watched.push(currentMovieTitle);\n    localStorage.setItem('movie-watched', JSON.stringify(watched));\n  });\n  //Add to Queue (localStorage)\n  addToQueuBtn.addEventListener('click', () => {\n    queue.includes(currentMovieTitle)\n      ? alert(`${currentMovieTitle} has been added to the queue already`)\n      : queue.push(currentMovieTitle);\n    localStorage.setItem('movie-queue', JSON.stringify(queue));\n  });\n  //Add to Watched (localStorage)\n  addToWatchedBtn.addEventListener('click', () => {\n    watched.includes(currentMovieID) ?\n      alert(`${currentMovieTitle} has been watched already`) :\n      watched.push(currentMovieID);\n    localStorage.setItem('movie-watched', JSON.stringify(watched));\n  })\n  //Add to Queue (localStorage)\n  addToQueuBtn.addEventListener('click', () => {\n    queue.includes(currentMovieID) ?\n      alert(`${currentMovieTitle} has been added to the queue already`) :\n      queue.push(currentMovieID);\n    localStorage.setItem('movie-queue', JSON.stringify(queue));\n  })\n  //Pressing escape to close modal\n  document.body.addEventListener('keydown', event => {\n    if (event.code === 'Escape') {\n      closeModal();\n    }\n  });"],"names":["$66b821ea461d9f2a$var$currentMovieTitle","$66b821ea461d9f2a$var$currentMovieID","$66b821ea461d9f2a$var$queue","$66b821ea461d9f2a$var$watched","$66b821ea461d9f2a$var$API_KEY","$66b821ea461d9f2a$var$API_URL","$66b821ea461d9f2a$var$BASE_URL","JSON","parse","localStorage","getItem","setItem","stringify","$66b821ea461d9f2a$var$genres","$66b821ea461d9f2a$var$modal","document","getElementById","$66b821ea461d9f2a$var$modalPoster","$66b821ea461d9f2a$var$modalTitle","$66b821ea461d9f2a$var$modalVote","$66b821ea461d9f2a$var$modalPopularity","$66b821ea461d9f2a$var$modalOrigTitle","$66b821ea461d9f2a$var$modalGenre","$66b821ea461d9f2a$var$modalOverview","$66b821ea461d9f2a$var$addToWatchedBtn","$66b821ea461d9f2a$var$addToQueuBtn","$66b821ea461d9f2a$var$closeBtn","getElementsByClassName","$66b821ea461d9f2a$var$closeModal","style","display","fetch","then","response","json","data","genres","$66b821ea461d9f2a$var$getMovies","$66b821ea461d9f2a$var$showMovies","catch","error","console","addEventListener","window","event","target","$66b821ea461d9f2a$var$lastUrl","$66b821ea461d9f2a$var$main","$66b821ea461d9f2a$var$form","$66b821ea461d9f2a$var$search","$66b821ea461d9f2a$var$loader","querySelector","url","classList","toggle","res","log","results","length","currentPage","page","nextPage","prevPage","totalPages","total_pages","current","innerText","prev","add","next","remove","innerHTML","forEach","movie","title","poster_path","release_date","genre_ids","movieEl","createElement","movieGenres","Array","isArray","map","genreId","genre2","find","genre","id","name","join","concat","toUpperCase","slice","src","textContent","vote_average","toFixed","vote_count","popularity","original_title","genre1","overview","$66b821ea461d9f2a$var$openModal","appendChild","$66b821ea461d9f2a$var$pageCall","urlSplit","split","queryParams","key","toString","a","b","e","preventDefault","searchTerm","value","$66b821ea461d9f2a$var$searchURL","currentMovie","parentElement","lastElementChild","firstElementChild","includes","alert","push","body","code"],"version":3,"file":"index.fd172f0c.js.map"}